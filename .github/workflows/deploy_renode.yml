
name: Deploy ReNode

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  renode_builder_path: Third-party/gh_build/build_renode.py
  renode_artifacts_sources_path: ReNode/
  renode_dir: ${{github.workspace}}/ReNode/
  renode_compiled_executable: ReNode.exe
  renode_compile_graphs_cli: -prep_code -nosplash -noapp -noerrwin
  rb_exe: ${{github.workspace}}/RBuilder/rb.exe
  DEPLOY_TOKEN: ${{ secrets.TOKEN }}

jobs:

  deploy:
    name: Build
    runs-on: windows-2019
    if: github.repository == 'Relicta-Team/ReSDK_A3.vr'
    steps:
      
      - name: Common utils
        #run: |
        #  choco install directx
        #  choco install directx-sdk
        #  choco install vcredist2010
        #  choco install vcredist2012
        #  choco install devbox-vcredist2010
        #  choco install vcredist140
        run: |
          choco install directx
          choco install vcredist2010
          choco install vcredist2012

      - name: Setup Python
        uses: actions/setup-python@v3.1.4
      - uses: actions/checkout@v3
      # - name: Test issue (GH CLI)
      #   env:
      #     GH_TOKEN: ${{secrets.TOKEN}}
      #   run: |
      #     gh issue create --title "Тестовая задача" --body "Тестовая задача, предоставленна через Github actions"
      
      # ----------------------- build exe -----------------------
      - name: Compile
        id: renode_compile
        working-directory: ${{ github.workspace }}/Third-party/gh_build
        run: |
          python -V
          python build_renode.py --repo=Relicta-Team/ReNodes --env_token_var=DEPLOY_TOKEN
      
      - uses: actions/upload-artifact@v4
        name: Postbuild nodes lib
        with:
          name: Postbuild lib log
          path: |
            ${{github.workspace}}/Third-party/gh_build/TEMP/**

      # ----------------------- tests and build dependencies -----------------------
      - name: Test executable
        id: renode_test_exe
        run: |
          echo "TODO implement test executable"
      - name: Init RBuilder
        if: steps.renode_test_exe.outcome=='success'
        working-directory: ${{github.workspace}}/RBuilder
        run: |
          ${{env.rb_exe}} -init build -l
      - name: Build nodes library
        if: steps.renode_test_exe.outcome=='success'
        working-directory: ${{github.workspace}}/RBuilder
        run: |
          ${{env.rb_exe}} run -d DEBUG -d GENERATE_RENODE_BINDINGS -rptshow True
        
      - name: Compile graphs
        if: steps.renode_test_exe.outcome=='success'
        working-directory: ${{ env.renode_dir }}
        run: |
          ${{ env.renode_compiled_executable }} ${{ env.renode_compile_graphs_cli }}
      # ----------------------- upload/commit compiled -----------------------
      
      - uses: actions/upload-artifact@v4
        name: Upload ReNode compiled artifact
        with:
          name: ReNode ${{ steps.renode_compile.outputs.RENODE_FULL_VERSION }}
          path: |
            ${{ env.renode_artifacts_sources_path }}
      
      - name: Update ReNode application
        uses: test-room-7/action-update-file@v1
        with:
          committer-name: ReNode update
          file-path: |
            ReNode/**
          commit-msg: ReNode ${{ steps.renode_compile.outputs.RENODE_FULL_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

